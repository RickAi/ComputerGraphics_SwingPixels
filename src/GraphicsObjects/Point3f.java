package GraphicsObjects;

public class Point3f {

	public static final int POSITION_X = 0;
	public static final int POSITION_Y = 1;
	public static final int POSITION_Z = 2;

	public float x;
	public float y;
	public float z;

	// default constructor
	public Point3f() {
		x = 0.0f;
		y = 0.0f;
		z = 0.0f;
	}

	// initializing constructor
	public Point3f(float x, float y, float z) {
		this.x = x;
		this.y = y;
		this.z = z;
	}

	// sometimes for different algorithms we will need to address the point
	// using positions 0 1 2
	public float getPostion(int postion) {
		switch (postion) {
		case POSITION_X:
			return x;
		case POSITION_Y:
			return y;
		case POSITION_Z:
			return z;
		default:
			return Float.NaN;
		}
	}

	public String toString() {
		return ("(" + x + "," + y + "," + z + ")");
	}

	// point add vector will get a new point
	// use this point's x, y, z add vetecor's x, y, z
	public Point3f plusVector(Vector3f plusedVector) {
		Point3f point3f = new Point3f();
		point3f.x = this.x + plusedVector.x;
		point3f.y = this.y + plusedVector.y;
		point3f.z = this.z + plusedVector.z;
		return point3f;
	}

	// point substract vector will get a new point
	// use this point's x, y, z substract vetecor's x, y, z
	public Point3f minusVector(Vector3f minusedVector) {
		Point3f point3f = new Point3f();
		point3f.x = this.x - minusedVector.x;
		point3f.y = this.y - minusedVector.y;
		point3f.z = this.z - minusedVector.z;
		return point3f;
	}

	// point minus point will get a new vector
	// use this point's x, y, z substract point's x, y, z
	public Vector3f minusPoint(Point3f minusedPoint) {
		Vector3f vector3f = new Vector3f();
		vector3f.x = this.x - minusedPoint.x;
		vector3f.y = this.y - minusedPoint.y;
		vector3f.z = this.z - minusedPoint.z;
		return vector3f;
	}
	
	public float distance(Point3f point3f){
		return (float) Math.sqrt(Math.pow(point3f.y - y, 2) + Math.pow(point3f.x - x, 2));
	}

}

/*
 * ..............................................................................
 * ..
 * ...........................................................................
 * .....
 * ........................................................................
 * ........
 * .....................................................................
 * ...........
 * ..................................................................
 * ..............
 * ...............................................................
 * .................
 * ............................................................
 * ....................
 * .........................................................
 * .......................
 * ......................................................
 * ..........................
 * ....................................=?7777+.........
 * ............................
 * .............................,8MMMMMMMMMMMMMMMMM7
 * ...............................
 * ...........................$MMMMMMMMMMMMMMMMMMMMMM7
 * .............................
 * ........................IMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 * ?..........................
 * ......................?MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN
 * ........................
 * .....................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM$
 * ......................
 * ...................ZMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 * .....................
 * ..................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM8
 * ....................
 * .................NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 * ...................
 * ................IMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 * ..................
 * ................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM$
 * .................
 * ...............=MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMZ
 * ................
 * ..............:MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 * ................
 * ..............7MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 * :...............
 * ..............DMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMZ
 * ...............
 * ..............MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM8
 * ...............
 * ..............MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN
 * ...............
 * ..............NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO
 * ...............
 * ..............$MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMI
 * ...............
 * ..............+MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 * =...............
 * ...............8MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 * ................
 * ................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM8
 * ................
 * ................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN
 * ,................
 * ................=MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 * ..................
 * .................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMZ
 * ..................
 * ..................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMD
 * ...................
 * ...................?MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 * .....................
 * ....................8MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 * ......................
 * .....................,8MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
 * ,.......................
 * ........................NMMMMMMMMMMMMMMMMMMMMMMMMMMMMN
 * ?.........................
 * ..........................NMMMMMMMMMMMMMMMMMMMMMMMMMI
 * ...........................
 * .............................$MMMMMMMMMMMMMMMMMMM?
 * ..............................
 * .................................,I$NMMMMMN$?...
 * ................................
 * .............................................
 * ...................................
 * ..........................................
 * ......................................
 * .......................................
 * .........................................
 * .......................................................................
 */
